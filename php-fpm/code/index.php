<?php

//Задание 1.

// Собрать для себя окружение из Nginx + PHP-FPM и PHP CLI
// Выполните код в контейнере PHP CLI и объясните, что выведет данный код и почему:

// <?php
// $a = 5;
// $b = '05';
// var_dump($a == $b);
// var_dump((int)'012345');
// var_dump((float)123.0 === (int)123.0);
// var_dump(0 == 'hello, world');

// В контейнере с PHP CLI поменяйте версию PHP с 8.2 на 7.4. Изменится ли вывод?

echo("Задание 1.<br>");
echo("<br>");

$a = 5;
$b = '05';
var_dump($a == $b);                    // bool(true)
var_dump((int)'012345');               // int(12345)
var_dump((float)123.0 === (int)123.0); // bool(false)
var_dump(0 == 'hello, world');         // bool(false)

// Объяснение вывода:

// 1. var_dump($a == $b);: 
// - Это сравнение нестрогое. Переменная $b (строка '05') будет преобразована в целое число,
// что получит значение 5. Так как оба значения равны, вывод будет bool(true).

// 2. var_dump((int)'012345');: 
// - Преобразует строку '012345' в целое число. В процессе преобразования ведущие нули отбрасываются,
// и остается значение 12345. Вывод будет int(12345).

// 3. var_dump((float)123.0 === (int)123.0);: 
// - Здесь сравниваются float и int с использованием строгого сравнения.
// Так как типы переменных разные, поэтому вывод будет bool(false).

// 4. var_dump(0 == 'hello, world');: 
// - При нестрогом сравнении строка 'hello, world' преобразуется в 0, так как не содержит чисел.
// Следовательно, 0 == 0, и вывод будет bool(false).

// Теперь, если поменять версию PHP с 8.2 на 7.4, результат последнего выражения будет bool(true),
// Так как он видя что первый аргумент относится к числовому значению,
// преобразует и второй аргумент к числовому значению, а так как цифр в этой строке нет,
// он приравняет ее к 0.


// Задание 2.

// Используя только две числовые переменные, поменяйте их значение местами.
// Например, если a = 1, b = 2, надо, чтобы получилось: b = 1, a = 2.
// Дополнительные переменные, функции и конструкции типа list() использовать нельзя.

echo("<br>");
echo("<br>Задание 2.<br>");
echo("<br>");

$a = 1;
$b = 2;

$a = $a ^ $b;  // a теперь 0011 (3)
$b = $a ^ $b;  // b теперь 0001 (1)
$a = $a ^ $b;  // a теперь 0010 (2)

echo "a = {$a}, b = {$b}"; // а = 2, b = 1
